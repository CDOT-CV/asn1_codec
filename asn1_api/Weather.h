/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "SEMI"
 * 	found in "SEMI_v2.3.0_070616.asn"
 * 	`asn1c -gen-OER -gen-PER`
 */

#ifndef	_Weather_H_
#define	_Weather_H_


#include <asn_application.h>

/* Including external dependencies */
#include "AmbientAirTemperature.h"
#include "AmbientAirPressure.h"
#include "WiperStatus.h"
#include "WiperRate.h"
#include <constr_SEQUENCE.h>
#include "EssPrecipYesNo.h"
#include "EssPrecipRate.h"
#include "EssPrecipSituation.h"
#include "EssSolarRadiation.h"
#include "EssMobileFriction.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Weather */
typedef struct Weather {
	struct wipers {
		WiperStatus_t	 statFrnt;
		WiperRate_t	*rateFrnt	/* OPTIONAL */;
		WiperStatus_t	*statRear	/* OPTIONAL */;
		WiperRate_t	*rateRear	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *wipers;
	AmbientAirTemperature_t	*airTemp	/* OPTIONAL */;
	AmbientAirPressure_t	*airPres	/* OPTIONAL */;
	struct weatherReport {
		EssPrecipYesNo_t	 isRaining;
		EssPrecipRate_t	*rainRate	/* OPTIONAL */;
		EssPrecipSituation_t	*precipSituation	/* OPTIONAL */;
		EssSolarRadiation_t	*solarRadiation	/* OPTIONAL */;
		EssMobileFriction_t	*friction	/* OPTIONAL */;
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *weatherReport;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Weather_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Weather;
extern asn_SEQUENCE_specifics_t asn_SPC_Weather_specs_1;
extern asn_TYPE_member_t asn_MBR_Weather_1[4];

#ifdef __cplusplus
}
#endif

#endif	/* _Weather_H_ */
#include <asn_internal.h>
